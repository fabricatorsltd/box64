/*********************************************************************
 * File automatically generated by rebuild_wrappers_32.py (v0.0.2.2) *
 *********************************************************************/
#ifndef __wrappedlibpthreadTYPES32_H_
#define __wrappedlibpthreadTYPES32_H_

#ifndef LIBNAME
#error You should only #include this file inside a wrapped*.c file
#endif
#ifndef ADDED_FUNCTIONS
#define ADDED_FUNCTIONS() 
#endif

typedef void (*vEv_t)(void);
typedef void (*vEp_t)(void*);
typedef int32_t (*iEp_t)(void*);
typedef int32_t (*iEh_t)(uintptr_t);
typedef void (*vEpi_t)(void*, int32_t);
typedef int32_t (*iEpi_t)(void*, int32_t);
typedef int32_t (*iEpL_t)(void*, uintptr_t);
typedef int32_t (*iEpp_t)(void*, void*);
typedef int32_t (*iEhi_t)(uintptr_t, int32_t);
typedef int32_t (*iEhp_t)(uintptr_t, void*);
typedef int32_t (*iEprLL__t)(void*, struct_LL_t*);
typedef void (*vEppp_t)(void*, void*, void*);
typedef int32_t (*iEpiu_t)(void*, int32_t, uint32_t);
typedef int32_t (*iEpup_t)(void*, uint32_t, void*);
typedef int32_t (*iEppL_t)(void*, void*, uintptr_t);
typedef int32_t (*iEppp_t)(void*, void*, void*);
typedef int32_t (*iEhup_t)(uintptr_t, uint32_t, void*);
typedef void* (*pEpOM_t)(void*, int32_t, ...);
typedef int32_t (*iEpprLL__t)(void*, void*, struct_LL_t*);
typedef int32_t (*iEBh_ppp_t)(struct_h_t*, void*, void*, void*);

#define SUPER() ADDED_FUNCTIONS() \
	GO(__pthread_initialize, vEv_t) \
	GO(__pthread_register_cancel, vEp_t) \
	GO(__pthread_unregister_cancel, vEp_t) \
	GO(__pthread_unwind_next, vEp_t) \
	GO(__pthread_mutex_destroy, iEp_t) \
	GO(__pthread_mutex_lock, iEp_t) \
	GO(__pthread_mutex_trylock, iEp_t) \
	GO(__pthread_mutex_unlock, iEp_t) \
	GO(__pthread_mutexattr_init, iEp_t) \
	GO(pthread_attr_destroy, iEp_t) \
	GO(pthread_attr_init, iEp_t) \
	GO(pthread_cond_broadcast, iEp_t) \
	GO(pthread_cond_broadcast@GLIBC_2.0, iEp_t) \
	GO(pthread_cond_destroy, iEp_t) \
	GO(pthread_cond_destroy@GLIBC_2.0, iEp_t) \
	GO(pthread_cond_signal, iEp_t) \
	GO(pthread_cond_signal@GLIBC_2.0, iEp_t) \
	GO(pthread_mutex_destroy, iEp_t) \
	GO(pthread_mutex_lock, iEp_t) \
	GO(pthread_mutex_trylock, iEp_t) \
	GO(pthread_mutex_unlock, iEp_t) \
	GO(pthread_mutexattr_init, iEp_t) \
	GO(pthread_rwlock_destroy, iEp_t) \
	GO(pthread_rwlock_unlock, iEp_t) \
	GO(pthread_rwlock_wrlock, iEp_t) \
	GO(sem_close, iEp_t) \
	GO(sem_destroy, iEp_t) \
	GO(sem_post, iEp_t) \
	GO(sem_trywait, iEp_t) \
	GO(sem_wait, iEp_t) \
	GO(pthread_detach, iEh_t) \
	GO(_pthread_cleanup_pop, vEpi_t) \
	GO(_pthread_cleanup_pop_restore, vEpi_t) \
	GO(pthread_attr_setdetachstate, iEpi_t) \
	GO(pthread_attr_setinheritsched, iEpi_t) \
	GO(pthread_attr_setschedpolicy, iEpi_t) \
	GO(pthread_attr_setscope, iEpi_t) \
	GO(pthread_mutexattr_setkind_np, iEpi_t) \
	GO(pthread_attr_setguardsize, iEpL_t) \
	GO(pthread_attr_setstacksize, iEpL_t) \
	GO(__pthread_key_create, iEpp_t) \
	GO(__pthread_mutex_init, iEpp_t) \
	GO(__pthread_once, iEpp_t) \
	GO(__pthread_rwlock_init, iEpp_t) \
	GO(pthread_attr_getdetachstate, iEpp_t) \
	GO(pthread_attr_getguardsize, iEpp_t) \
	GO(pthread_attr_getinheritsched, iEpp_t) \
	GO(pthread_attr_getschedparam, iEpp_t) \
	GO(pthread_attr_getschedpolicy, iEpp_t) \
	GO(pthread_attr_getscope, iEpp_t) \
	GO(pthread_attr_getstackaddr, iEpp_t) \
	GO(pthread_attr_getstacksize, iEpp_t) \
	GO(pthread_attr_setschedparam, iEpp_t) \
	GO(pthread_attr_setstackaddr, iEpp_t) \
	GO(pthread_cond_init, iEpp_t) \
	GO(pthread_cond_init@GLIBC_2.0, iEpp_t) \
	GO(pthread_cond_wait, iEpp_t) \
	GO(pthread_cond_wait@GLIBC_2.0, iEpp_t) \
	GO(pthread_key_create, iEpp_t) \
	GO(pthread_mutex_init, iEpp_t) \
	GO(pthread_mutex_timedlock, iEpp_t) \
	GO(pthread_once, iEpp_t) \
	GO(pthread_rwlock_init, iEpp_t) \
	GO(sem_getvalue, iEpp_t) \
	GO(pthread_kill@GLIBC_2.0, iEhi_t) \
	GO(pthread_getattr_np, iEhp_t) \
	GO(sem_timedwait, iEprLL__t) \
	GO(_pthread_cleanup_push, vEppp_t) \
	GO(_pthread_cleanup_push_defer, vEppp_t) \
	GO(sem_init, iEpiu_t) \
	GO(pthread_attr_setaffinity_np, iEpup_t) \
	GO(pthread_attr_setstack, iEppL_t) \
	GO(__pthread_atfork, iEppp_t) \
	GO(pthread_atfork, iEppp_t) \
	GO(pthread_attr_getstack, iEppp_t) \
	GO(pthread_getaffinity_np, iEhup_t) \
	GO(pthread_setaffinity_np, iEhup_t) \
	GO(sem_open, pEpOM_t) \
	GO(pthread_cond_timedwait, iEpprLL__t) \
	GO(pthread_cond_timedwait@GLIBC_2.0, iEpprLL__t) \
	GO(pthread_create, iEBh_ppp_t)

#endif // __wrappedlibpthreadTYPES32_H_
